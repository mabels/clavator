#include <string>
#include <fstream>
#include <sstream>

#include <cascara/cascara.hpp>
using namespace cascara;

#include "../src/ssh_authorized_keys.hpp"
#include "../src/base64.hpp"

void sample_authorized_keys(std::stringstream &myfile) {
  myfile <<"# comment\n";
  myfile << "     # comment\n";
  myfile << "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDIQpC2scaVXEaNuwtq4n6Vtht2WHYxtDFKe44JNFEsZGyQjyL9c2qkmQQGCF+2g3HrIPDTCCCWQ3GUiXGAlQ0/rf6sLqcm4YMXt+hgHU5VeciUIDEySCKdCPC419wFPBw6oKdcN1pLoIdWoF4LRDcjcrKKAlkdNJ/oLnl716piLdchABO9NXGxBpkLsJGK8qw390O1ZqZMe9wEAL9l/A1/49v8LfzELp0/fhSmiXphTVI/zNVIp/QIytXzRg74xcYpBjHk1TQZHuz/HYYsWwccnu7vYaTDX0CCoAyEt599f9u+JQ4oW0qyLO0ie7YcmR6nGEW4DMsPcfdqqo2VyYy4ix3U5RI2JcObfP0snYwPtAdVeeeReXi3c/E7bGLeCcwdFeFBfHSA9PDGxWVlxh/oCJaE7kP7eBhXNjN05FodVdNczKI5T9etfQ9VHILFrvpEREg1+OTiI58RmwjxS5ThloqXvr/nZzhIwTsED0KNW8wE4pjyotDJ8jaW2d7oVIMdWqE2M9Z1sLqDDdhHdVMFxk6Hl2XfqeqO2Jnst7qzbHAN/S3hvSwysixWJEcLDVG+cg1KRwz4qafCU5oHSp8aNNOk4RZozboFjac17nOmfPfnjC/LLayjSkEBZ+eFi+njZRLDN92k3PvHYFEB3USbHYzICsuDcf+L4cslX03g7w== openpgp:0x5F1BE34D\n";
  myfile << "     ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDIQpC2scaVXEaNuwtq4n6Vtht2WHYxtDFKe44JNFEsZGyQjyL9c2qkmQQGCF+2g3HrIPDTCCCWQ3GUiXGAlQ0/rf6sLqcm4YMXt+hgHU5VeciUIDEySCKdCPC419wFPBw6oKdcN1pLoIdWoF4LRDcjcrKKAlkdNJ/oLnl716piLdchABO9NXGxBpkLsJGK8qw390O1ZqZMe9wEAL9l/A1/49v8LfzELp0/fhSmiXphTVI/zNVIp/QIytXzRg74xcYpBjHk1TQZHuz/HYYsWwccnu7vYaTDX0CCoAyEt599f9u+JQ4oW0qyLO0ie7YcmR6nGEW4DMsPcfdqqo2VyYy4ix3U5RI2JcObfP0snYwPtAdVeeeReXi3c/E7bGLeCcwdFeFBfHSA9PDGxWVlxh/oCJaE7kP7eBhXNjN05FodVdNczKI5T9etfQ9VHILFrvpEREg1+OTiI58RmwjxS5ThloqXvr/nZzhIwTsED0KNW8wE4pjyotDJ8jaW2d7oVIMdWqE2M9Z1sLqDDdhHdVMFxk6Hl2XfqeqO2Jnst7qzbHAN/S3hvSwysixWJEcLDVG+cg1KRwz4qafCU5oHSp8aNNOk4RZozboFjac17nOmfPfnjC/LLayjSkEBZ+eFi+njZRLDN92k3PvHYFEB3USbHYzICsuDcf+L4cslX03g7w== openpgp:0x5F1BE34D     \n";
  myfile << "     \n";
  myfile << "     ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDIQpC2sc openpgp:0x5F1BE34D     \n";
  myfile << "     \n";
}

int main() {
  describe("ssh_authorized_keys", []() {
    it("read ssk_authorized_keys", []() {
      std::stringstream istr;
      sample_authorized_keys(istr);
      auto skeys = PamClavator::SshAuthorizedKeys::read(istr);
      assert.equal(skeys.get().size(), 7, "size");
      assert.equal(skeys.get()[0].isOk(), false, "0 false");
      assert.equal(skeys.get()[1].isOk(), false, "1 false");
      assert.equal(skeys.get()[2].isOk(), true, "2 true");
      assert.equal(skeys.get()[2].style, "ssh-rsa", "style");
      assert.equal(skeys.get()[2].data, "AAAAB3NzaC1yc2EAAAADAQABAAACAQDIQpC2scaVXEaNuwtq4n6Vtht2WHYxtDFKe44JNFEsZGyQjyL9c2qkmQQGCF+2g3HrIPDTCCCWQ3GUiXGAlQ0/rf6sLqcm4YMXt+hgHU5VeciUIDEySCKdCPC419wFPBw6oKdcN1pLoIdWoF4LRDcjcrKKAlkdNJ/oLnl716piLdchABO9NXGxBpkLsJGK8qw390O1ZqZMe9wEAL9l/A1/49v8LfzELp0/fhSmiXphTVI/zNVIp/QIytXzRg74xcYpBjHk1TQZHuz/HYYsWwccnu7vYaTDX0CCoAyEt599f9u+JQ4oW0qyLO0ie7YcmR6nGEW4DMsPcfdqqo2VyYy4ix3U5RI2JcObfP0snYwPtAdVeeeReXi3c/E7bGLeCcwdFeFBfHSA9PDGxWVlxh/oCJaE7kP7eBhXNjN05FodVdNczKI5T9etfQ9VHILFrvpEREg1+OTiI58RmwjxS5ThloqXvr/nZzhIwTsED0KNW8wE4pjyotDJ8jaW2d7oVIMdWqE2M9Z1sLqDDdhHdVMFxk6Hl2XfqeqO2Jnst7qzbHAN/S3hvSwysixWJEcLDVG+cg1KRwz4qafCU5oHSp8aNNOk4RZozboFjac17nOmfPfnjC/LLayjSkEBZ+eFi+njZRLDN92k3PvHYFEB3USbHYzICsuDcf+L4cslX03g7w==", "data");
      assert.equal(skeys.get()[2].name, "openpgp:0x5F1BE34D", "name");
      assert.equal(skeys.get()[2].from_data_style, "ssh-rsa", "from-style");
      assert.equal(memcmp(skeys.get()[2].from_data_modulo.c_str(), "\1\0\1", 3), 0, "from-modulo");
      const unsigned char pubKey[] = {
        0x00,0xc8,0x42,0x90,0xb6,0xb1,0xc6,0x95,0x5c,0x46,0x8d,0xbb,0x0b,0x6a,0xe2,0x7e,
        0x95,0xb6,0x1b,0x76,0x58,0x76,0x31,0xb4,0x31,0x4a,0x7b,0x8e,0x09,0x34,0x51,0x2c,
        0x64,0x6c,0x90,0x8f,0x22,0xfd,0x73,0x6a,0xa4,0x99,0x04,0x06,0x08,0x5f,0xb6,0x83,
        0x71,0xeb,0x20,0xf0,0xd3,0x08,0x20,0x96,0x43,0x71,0x94,0x89,0x71,0x80,0x95,0x0d,
        0x3f,0xad,0xfe,0xac,0x2e,0xa7,0x26,0xe1,0x83,0x17,0xb7,0xe8,0x60,0x1d,0x4e,0x55,
        0x79,0xc8,0x94,0x20,0x31,0x32,0x48,0x22,0x9d,0x08,0xf0,0xb8,0xd7,0xdc,0x05,0x3c,
        0x1c,0x3a,0xa0,0xa7,0x5c,0x37,0x5a,0x4b,0xa0,0x87,0x56,0xa0,0x5e,0x0b,0x44,0x37,
        0x23,0x72,0xb2,0x8a,0x02,0x59,0x1d,0x34,0x9f,0xe8,0x2e,0x79,0x7b,0xd7,0xaa,0x62,
        0x2d,0xd7,0x21,0x00,0x13,0xbd,0x35,0x71,0xb1,0x06,0x99,0x0b,0xb0,0x91,0x8a,0xf2,
        0xac,0x37,0xf7,0x43,0xb5,0x66,0xa6,0x4c,0x7b,0xdc,0x04,0x00,0xbf,0x65,0xfc,0x0d,
        0x7f,0xe3,0xdb,0xfc,0x2d,0xfc,0xc4,0x2e,0x9d,0x3f,0x7e,0x14,0xa6,0x89,0x7a,0x61,
        0x4d,0x52,0x3f,0xcc,0xd5,0x48,0xa7,0xf4,0x08,0xca,0xd5,0xf3,0x46,0x0e,0xf8,0xc5,
        0xc6,0x29,0x06,0x31,0xe4,0xd5,0x34,0x19,0x1e,0xec,0xff,0x1d,0x86,0x2c,0x5b,0x07,
        0x1c,0x9e,0xee,0xef,0x61,0xa4,0xc3,0x5f,0x40,0x82,0xa0,0x0c,0x84,0xb7,0x9f,0x7d,
        0x7f,0xdb,0xbe,0x25,0x0e,0x28,0x5b,0x4a,0xb2,0x2c,0xed,0x22,0x7b,0xb6,0x1c,0x99,
        0x1e,0xa7,0x18,0x45,0xb8,0x0c,0xcb,0x0f,0x71,0xf7,0x6a,0xaa,0x8d,0x95,0xc9,0x8c,
        0xb8,0x8b,0x1d,0xd4,0xe5,0x12,0x36,0x25,0xc3,0x9b,0x7c,0xfd,0x2c,0x9d,0x8c,0x0f,
        0xb4,0x07,0x55,0x79,0xe7,0x91,0x79,0x78,0xb7,0x73,0xf1,0x3b,0x6c,0x62,0xde,0x09,
        0xcc,0x1d,0x15,0xe1,0x41,0x7c,0x74,0x80,0xf4,0xf0,0xc6,0xc5,0x65,0x65,0xc6,0x1f,
        0xe8,0x08,0x96,0x84,0xee,0x43,0xfb,0x78,0x18,0x57,0x36,0x33,0x74,0xe4,0x5a,0x1d,
        0x55,0xd3,0x5c,0xcc,0xa2,0x39,0x4f,0xd7,0xad,0x7d,0x0f,0x55,0x1c,0x82,0xc5,0xae,
        0xfa,0x44,0x44,0x48,0x35,0xf8,0xe4,0xe2,0x23,0x9f,0x11,0x9b,0x08,0xf1,0x4b,0x94,
        0xe1,0x96,0x8a,0x97,0xbe,0xbf,0xe7,0x67,0x38,0x48,0xc1,0x3b,0x04,0x0f,0x42,0x8d,
        0x5b,0xcc,0x04,0xe2,0x98,0xf2,0xa2,0xd0,0xc9,0xf2,0x36,0x96,0xd9,0xde,0xe8,0x54,
        0x83,0x1d,0x5a,0xa1,0x36,0x33,0xd6,0x75,0xb0,0xba,0x83,0x0d,0xd8,0x47,0x75,0x53,
        0x05,0xc6,0x4e,0x87,0x97,0x65,0xdf,0xa9,0xea,0x8e,0xd8,0x99,0xec,0xb7,0xba,0xb3,
        0x6c,0x70,0x0d,0xfd,0x2d,0xe1,0xbd,0x2c,0x32,0xb2,0x2c,0x56,0x24,0x47,0x0b,0x0d,
        0x51,0xbe,0x72,0x0d,0x4a,0x47,0x0c,0xf8,0xa9,0xa7,0xc2,0x53,0x9a,0x07,0x4a,0x9f,
        0x1a,0x34,0xd3,0xa4,0xe1,0x16,0x68,0xcd,0xba,0x05,0x8d,0xa7,0x35,0xee,0x73,0xa6,
        0x7c,0xf7,0xe7,0x8c,0x2f,0xcb,0x2d,0xac,0xa3,0x4a,0x41,0x01,0x67,0xe7,0x85,0x8b,
        0xe9,0xe3,0x65,0x12,0xc3,0x37,0xdd,0xa4,0xdc,0xfb,0xc7,0x60,0x51,0x01,0xdd,0x44,
        0x9b,0x1d,0x8c,0xc8,0x0a,0xcb,0x83,0x71,0xff,0x8b,0xe1,0xcb,0x25,0x5f,0x4d,0xe0,
        0xef
      };
      assert.equal(memcmp(skeys.get()[2].from_data_pubkey.c_str(), pubKey, skeys.get()[2].from_data_pubkey.size()), 0, "pub-key");
      assert.equal(skeys.get()[3].isOk(), true, "3 true");
      assert.equal(skeys.get()[3].style, skeys.get()[2].style);
      assert.equal(skeys.get()[3].data, skeys.get()[2].data);
      assert.equal(skeys.get()[3].name, skeys.get()[2].name);
      assert.equal(skeys.get()[3].from_data_style, skeys.get()[2].from_data_style);
      assert.equal(skeys.get()[3].from_data_modulo, skeys.get()[2].from_data_modulo);
      assert.equal(skeys.get()[3].from_data_pubkey, skeys.get()[2].from_data_pubkey);
      assert.equal(skeys.get()[4].isOk(), false);
      assert.equal(skeys.get()[5].isOk(), false);
      assert.equal(skeys.get()[6].isOk(), false);
    });
  });
  return exit();
}
