import * as React from 'react';
// import * as classnames from 'classnames';
// import { observable } from 'mobx';
import { observer } from 'mobx-react';
// import BooleanValue from '../../../model/boolean-value';
// import SimpleYubiKey from '../../model/simple-yubikey';
// import RcCheckWarrents from './rc-check-warrents';
// import DateValue from '../../../model/date-value';
// import { format_date } from '../../../model/helper';
// import PassPhrase from '../../model/pass-phrase';
// import DoublePassword from '../../model/double-password';
import ViewWarrents from '../../model/view-warrents';
// import InputPassword from '../controls/input-password';

class RcWarrentState {
}

interface RcWarrentProps extends React.Props<RcWarrent> {
  // approvableParts: DoublePassword[];
  // doublePassword: DoublePassword;
  // viewWarrents: ViewWarrents;
}

@observer
export class RcWarrent extends
  React.Component<RcWarrentProps, RcWarrentState> {

  constructor() {
    super();
    this.state = { };
  }

  public render(): JSX.Element {
    // if (this.props.doublePassword.warrents.length() == 1) {
    //   return null;
    // }
    const wr = this.props.doublePassword.warrents;
    if (wr.regMinMaxWarrent && !wr.approved.value) {
      return <button disabled={wr.approved.value || !wr.valid()}
        onClick={(e) => {
          console.log('Approved:', wr.regMinMaxWarrent.warrent.warrent.value);
          e.preventDefault();
          wr.approved = true;
        }} >{wr.regMinMaxWarrent.warrent.warrent.value}</button>;
    }
    return null;
  }

}

export default RcWarrent;
